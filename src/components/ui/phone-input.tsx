
import React from 'react';
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

interface PhoneInputProps {
  countryCode: string;
  setCountryCode: (value: string) => void;
  phoneNumber: string;
  setPhoneNumber: (value: string) => void;
  required?: boolean;
}

// Comprehensive list of country codes with flags
const countryCodes = [
  { code: "+1", country: "US ðŸ‡ºðŸ‡¸" },
  { code: "+44", country: "UK ðŸ‡¬ðŸ‡§" },
  { code: "+93", country: "AF ðŸ‡¦ðŸ‡«" },
  { code: "+355", country: "AL ðŸ‡¦ðŸ‡±" },
  { code: "+213", country: "DZ ðŸ‡©ðŸ‡¿" },
  { code: "+376", country: "AD ðŸ‡¦ðŸ‡©" },
  { code: "+244", country: "AO ðŸ‡¦ðŸ‡´" },
  { code: "+54", country: "AR ðŸ‡¦ðŸ‡·" },
  { code: "+374", country: "AM ðŸ‡¦ðŸ‡²" },
  { code: "+61", country: "AU ðŸ‡¦ðŸ‡º" },
  { code: "+43", country: "AT ðŸ‡¦ðŸ‡¹" },
  { code: "+994", country: "AZ ðŸ‡¦ðŸ‡¿" },
  { code: "+973", country: "BH ðŸ‡§ðŸ‡­" },
  { code: "+880", country: "BD ðŸ‡§ðŸ‡©" },
  { code: "+375", country: "BY ðŸ‡§ðŸ‡¾" },
  { code: "+32", country: "BE ðŸ‡§ðŸ‡ª" },
  { code: "+501", country: "BZ ðŸ‡§ðŸ‡¿" },
  { code: "+229", country: "BJ ðŸ‡§ðŸ‡¯" },
  { code: "+975", country: "BT ðŸ‡§ðŸ‡¹" },
  { code: "+591", country: "BO ðŸ‡§ðŸ‡´" },
  { code: "+387", country: "BA ðŸ‡§ðŸ‡¦" },
  { code: "+267", country: "BW ðŸ‡§ðŸ‡¼" },
  { code: "+55", country: "BR ðŸ‡§ðŸ‡·" },
  { code: "+673", country: "BN ðŸ‡§ðŸ‡³" },
  { code: "+359", country: "BG ðŸ‡§ðŸ‡¬" },
  { code: "+226", country: "BF ðŸ‡§ðŸ‡«" },
  { code: "+257", country: "BI ðŸ‡§ðŸ‡®" },
  { code: "+855", country: "KH ðŸ‡°ðŸ‡­" },
  { code: "+237", country: "CM ðŸ‡¨ðŸ‡²" },
  { code: "+1", country: "CA ðŸ‡¨ðŸ‡¦" },
  { code: "+238", country: "CV ðŸ‡¨ðŸ‡»" },
  { code: "+236", country: "CF ðŸ‡¨ðŸ‡«" },
  { code: "+235", country: "TD ðŸ‡¹ðŸ‡©" },
  { code: "+56", country: "CL ðŸ‡¨ðŸ‡±" },
  { code: "+86", country: "CN ðŸ‡¨ðŸ‡³" },
  { code: "+57", country: "CO ðŸ‡¨ðŸ‡´" },
  { code: "+269", country: "KM ðŸ‡°ðŸ‡²" },
  { code: "+242", country: "CG ðŸ‡¨ðŸ‡¬" },
  { code: "+243", country: "CD ðŸ‡¨ðŸ‡©" },
  { code: "+506", country: "CR ðŸ‡¨ðŸ‡·" },
  { code: "+385", country: "HR ðŸ‡­ðŸ‡·" },
  { code: "+53", country: "CU ðŸ‡¨ðŸ‡º" },
  { code: "+357", country: "CY ðŸ‡¨ðŸ‡¾" },
  { code: "+420", country: "CZ ðŸ‡¨ðŸ‡¿" },
  { code: "+45", country: "DK ðŸ‡©ðŸ‡°" },
  { code: "+253", country: "DJ ðŸ‡©ðŸ‡¯" },
  { code: "+670", country: "TL ðŸ‡¹ðŸ‡±" },
  { code: "+593", country: "EC ðŸ‡ªðŸ‡¨" },
  { code: "+20", country: "EG ðŸ‡ªðŸ‡¬" },
  { code: "+503", country: "SV ðŸ‡¸ðŸ‡»" },
  { code: "+240", country: "GQ ðŸ‡¬ðŸ‡¶" },
  { code: "+291", country: "ER ðŸ‡ªðŸ‡·" },
  { code: "+372", country: "EE ðŸ‡ªðŸ‡ª" },
  { code: "+251", country: "ET ðŸ‡ªðŸ‡¹" },
  { code: "+679", country: "FJ ðŸ‡«ðŸ‡¯" },
  { code: "+358", country: "FI ðŸ‡«ðŸ‡®" },
  { code: "+33", country: "FR ðŸ‡«ðŸ‡·" },
  { code: "+241", country: "GA ðŸ‡¬ðŸ‡¦" },
  { code: "+220", country: "GM ðŸ‡¬ðŸ‡²" },
  { code: "+995", country: "GE ðŸ‡¬ðŸ‡ª" },
  { code: "+49", country: "DE ðŸ‡©ðŸ‡ª" },
  { code: "+233", country: "GH ðŸ‡¬ðŸ‡­" },
  { code: "+30", country: "GR ðŸ‡¬ðŸ‡·" },
  { code: "+502", country: "GT ðŸ‡¬ðŸ‡¹" },
  { code: "+224", country: "GN ðŸ‡¬ðŸ‡³" },
  { code: "+245", country: "GW ðŸ‡¬ðŸ‡¼" },
  { code: "+592", country: "GY ðŸ‡¬ðŸ‡¾" },
  { code: "+509", country: "HT ðŸ‡­ðŸ‡¹" },
  { code: "+504", country: "HN ðŸ‡­ðŸ‡³" },
  { code: "+36", country: "HU ðŸ‡­ðŸ‡º" },
  { code: "+354", country: "IS ðŸ‡®ðŸ‡¸" },
  { code: "+91", country: "IN ðŸ‡®ðŸ‡³" },
  { code: "+62", country: "ID ðŸ‡®ðŸ‡©" },
  { code: "+98", country: "IR ðŸ‡®ðŸ‡·" },
  { code: "+964", country: "IQ ðŸ‡®ðŸ‡¶" },
  { code: "+353", country: "IE ðŸ‡®ðŸ‡ª" },
  { code: "+972", country: "IL ðŸ‡®ðŸ‡±" },
  { code: "+39", country: "IT ðŸ‡®ðŸ‡¹" },
  { code: "+225", country: "CI ðŸ‡¨ðŸ‡®" },
  { code: "+81", country: "JP ðŸ‡¯ðŸ‡µ" },
  { code: "+962", country: "JO ðŸ‡¯ðŸ‡´" },
  { code: "+7", country: "KZ ðŸ‡°ðŸ‡¿" },
  { code: "+254", country: "KE ðŸ‡°ðŸ‡ª" },
  { code: "+965", country: "KW ðŸ‡°ðŸ‡¼" },
  { code: "+996", country: "KG ðŸ‡°ðŸ‡¬" },
  { code: "+856", country: "LA ðŸ‡±ðŸ‡¦" },
  { code: "+371", country: "LV ðŸ‡±ðŸ‡»" },
  { code: "+961", country: "LB ðŸ‡±ðŸ‡§" },
  { code: "+266", country: "LS ðŸ‡±ðŸ‡¸" },
  { code: "+231", country: "LR ðŸ‡±ðŸ‡·" },
  { code: "+218", country: "LY ðŸ‡±ðŸ‡¾" },
  { code: "+423", country: "LI ðŸ‡±ðŸ‡®" },
  { code: "+370", country: "LT ðŸ‡±ðŸ‡¹" },
  { code: "+352", country: "LU ðŸ‡±ðŸ‡º" },
  { code: "+389", country: "MK ðŸ‡²ðŸ‡°" },
  { code: "+261", country: "MG ðŸ‡²ðŸ‡¬" },
  { code: "+265", country: "MW ðŸ‡²ðŸ‡¼" },
  { code: "+60", country: "MY ðŸ‡²ðŸ‡¾" },
  { code: "+960", country: "MV ðŸ‡²ðŸ‡»" },
  { code: "+223", country: "ML ðŸ‡²ðŸ‡±" },
  { code: "+356", country: "MT ðŸ‡²ðŸ‡¹" },
  { code: "+222", country: "MR ðŸ‡²ðŸ‡·" },
  { code: "+230", country: "MU ðŸ‡²ðŸ‡º" },
  { code: "+52", country: "MX ðŸ‡²ðŸ‡½" },
  { code: "+373", country: "MD ðŸ‡²ðŸ‡©" },
  { code: "+377", country: "MC ðŸ‡²ðŸ‡¨" },
  { code: "+976", country: "MN ðŸ‡²ðŸ‡³" },
  { code: "+382", country: "ME ðŸ‡²ðŸ‡ª" },
  { code: "+212", country: "MA ðŸ‡²ðŸ‡¦" },
  { code: "+258", country: "MZ ðŸ‡²ðŸ‡¿" },
  { code: "+95", country: "MM ðŸ‡²ðŸ‡²" },
  { code: "+264", country: "NA ðŸ‡³ðŸ‡¦" },
  { code: "+977", country: "NP ðŸ‡³ðŸ‡µ" },
  { code: "+31", country: "NL ðŸ‡³ðŸ‡±" },
  { code: "+64", country: "NZ ðŸ‡³ðŸ‡¿" },
  { code: "+505", country: "NI ðŸ‡³ðŸ‡®" },
  { code: "+227", country: "NE ðŸ‡³ðŸ‡ª" },
  { code: "+234", country: "NG ðŸ‡³ðŸ‡¬" },
  { code: "+850", country: "KP ðŸ‡°ðŸ‡µ" },
  { code: "+47", country: "NO ðŸ‡³ðŸ‡´" },
  { code: "+968", country: "OM ðŸ‡´ðŸ‡²" },
  { code: "+92", country: "PK ðŸ‡µðŸ‡°" },
  { code: "+507", country: "PA ðŸ‡µðŸ‡¦" },
  { code: "+675", country: "PG ðŸ‡µðŸ‡¬" },
  { code: "+595", country: "PY ðŸ‡µðŸ‡¾" },
  { code: "+51", country: "PE ðŸ‡µðŸ‡ª" },
  { code: "+63", country: "PH ðŸ‡µðŸ‡­" },
  { code: "+48", country: "PL ðŸ‡µðŸ‡±" },
  { code: "+351", country: "PT ðŸ‡µðŸ‡¹" },
  { code: "+974", country: "QA ðŸ‡¶ðŸ‡¦" },
  { code: "+40", country: "RO ðŸ‡·ðŸ‡´" },
  { code: "+7", country: "RU ðŸ‡·ðŸ‡º" },
  { code: "+250", country: "RW ðŸ‡·ðŸ‡¼" },
  { code: "+966", country: "SA ðŸ‡¸ðŸ‡¦" },
  { code: "+221", country: "SN ðŸ‡¸ðŸ‡³" },
  { code: "+381", country: "RS ðŸ‡·ðŸ‡¸" },
  { code: "+232", country: "SL ðŸ‡¸ðŸ‡±" },
  { code: "+65", country: "SG ðŸ‡¸ðŸ‡¬" },
  { code: "+421", country: "SK ðŸ‡¸ðŸ‡°" },
  { code: "+386", country: "SI ðŸ‡¸ðŸ‡®" },
  { code: "+252", country: "SO ðŸ‡¸ðŸ‡´" },
  { code: "+27", country: "ZA ðŸ‡¿ðŸ‡¦" },
  { code: "+82", country: "KR ðŸ‡°ðŸ‡·" },
  { code: "+211", country: "SS ðŸ‡¸ðŸ‡¸" },
  { code: "+34", country: "ES ðŸ‡ªðŸ‡¸" },
  { code: "+94", country: "LK ðŸ‡±ðŸ‡°" },
  { code: "+249", country: "SD ðŸ‡¸ðŸ‡©" },
  { code: "+597", country: "SR ðŸ‡¸ðŸ‡·" },
  { code: "+268", country: "SZ ðŸ‡¸ðŸ‡¿" },
  { code: "+46", country: "SE ðŸ‡¸ðŸ‡ª" },
  { code: "+41", country: "CH ðŸ‡¨ðŸ‡­" },
  { code: "+963", country: "SY ðŸ‡¸ðŸ‡¾" },
  { code: "+886", country: "TW ðŸ‡¹ðŸ‡¼" },
  { code: "+992", country: "TJ ðŸ‡¹ðŸ‡¯" },
  { code: "+255", country: "TZ ðŸ‡¹ðŸ‡¿" },
  { code: "+66", country: "TH ðŸ‡¹ðŸ‡­" },
  { code: "+228", country: "TG ðŸ‡¹ðŸ‡¬" },
  { code: "+216", country: "TN ðŸ‡¹ðŸ‡³" },
  { code: "+90", country: "TR ðŸ‡¹ðŸ‡·" },
  { code: "+993", country: "TM ðŸ‡¹ðŸ‡²" },
  { code: "+256", country: "UG ðŸ‡ºðŸ‡¬" },
  { code: "+380", country: "UA ðŸ‡ºðŸ‡¦" },
  { code: "+971", country: "AE ðŸ‡¦ðŸ‡ª" },
  { code: "+598", country: "UY ðŸ‡ºðŸ‡¾" },
  { code: "+998", country: "UZ ðŸ‡ºðŸ‡¿" },
  { code: "+58", country: "VE ðŸ‡»ðŸ‡ª" },
  { code: "+84", country: "VN ðŸ‡»ðŸ‡³" },
  { code: "+967", country: "YE ðŸ‡¾ðŸ‡ª" },
  { code: "+260", country: "ZM ðŸ‡¿ðŸ‡²" },
  { code: "+263", country: "ZW ðŸ‡¿ðŸ‡¼" },
];

export const PhoneInput = ({ 
  countryCode, 
  setCountryCode, 
  phoneNumber, 
  setPhoneNumber,
  required = false 
}: PhoneInputProps) => {
  // Validate phone number input to allow only digits
  const handlePhoneNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value.replace(/\D/g, ''); // Remove non-digit characters
    setPhoneNumber(value);
  };

  return (
    <div className="space-y-2">
      <Label htmlFor="phone">Phone Number {required && <span className="text-destructive">*</span>}</Label>
      <div className="flex gap-2">
        <div className="w-1/3">
          <Select value={countryCode} onValueChange={setCountryCode}>
            <SelectTrigger id="country-code" className="bg-secondary/50 border-muted">
              <SelectValue placeholder="Code" />
            </SelectTrigger>
            <SelectContent className="max-h-[300px]">
              {countryCodes.map((country) => (
                <SelectItem key={`${country.code}-${country.country}`} value={country.code}>
                  {country.code} {country.country}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
        <div className="w-2/3">
          <Input
            id="phone"
            placeholder="Phone number"
            value={phoneNumber}
            onChange={handlePhoneNumberChange}
            required={required}
            className="bg-secondary/50 border-muted"
            type="tel"
            maxLength={15} // Prevent extremely long phone numbers
          />
        </div>
      </div>
    </div>
  );
};
